import * as React from "https://cdn.skypack.dev/react@17.0.1";
import * as ReactDOM from "https://cdn.skypack.dev/react-dom@17.0.1";

const sounds = [
  {
    keyCode: 81,
    keyTrigger: 'Q',
    id: 'Heater-1',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'
  },
  {
    keyCode: 87,
    keyTrigger: 'W',
    id: 'Heater-2',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'
  },
  {
    keyCode: 69,
    keyTrigger: 'E',
    id: 'Heater-3',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'
  },
  {
    keyCode: 65,
    keyTrigger: 'A',
    id: 'Heater-4',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'
  },
  {
    keyCode: 83,
    keyTrigger: 'S',
    id: 'Clap',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'
  },
  {
    keyCode: 68,
    keyTrigger: 'D',
    id: 'Open-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'
  },
  {
    keyCode: 90,
    keyTrigger: 'Z',
    id: "Kick-n'-Hat",
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'
  },
  {
    keyCode: 88,
    keyTrigger: 'X',
    id: 'Kick',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'
  },
  {
    keyCode: 67,
    keyTrigger: 'C',
    id: 'Closed-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'
  }
];

class PadButton extends React.Component{
  constructor(props){
    super(props)
    this.activate = this.activate.bind(this);
    this.keyPress = this.keyPress.bind(this);
  }
  componentDidMount(){
    document.addEventListener("keydown", this.keyPress)
  }
  keyPress(e){
    if (e.keyCode === this.props.keyCode) {
      this.activate();
    }
  }
  activate(){
    const button = document.getElementById(this.props.clipId);
    button.classList.toggle("active");
    const sound = document.getElementById(this.props.keyTrigger);
    sound.currentTime = 0;
    sound.play();
    this.props.updateDisplay(this.props.clipId.replace(/-/g, " "));
    setTimeout(() => {button.classList.toggle("active")}, 100);
  }
  render(){
    return(
      <div onClick={this.activate} className="drum-pad inactive" id={this.props.clipId}>
        <audio className="clip" id={this.props.keyTrigger} src={this.props.clip} />
         {this.props.keyTrigger}
      </div>
    )
  }
}

class Machine extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      display: "Example"
    }
    this.updateDisplay = this.updateDisplay.bind(this);
  }
  updateDisplay(name){
    this.setState({
      display: name
    })
  }
  render(){
    let bank = sounds.map((obj) => {
      return(
        <PadButton updateDisplay={this.updateDisplay} keyTrigger={obj.keyTrigger} clipId={obj.id} clip={obj.url} keyCode={obj.keyCode}/>
      )
    })
    return(
      <div id="drum-machine">
        <div className="pad">
          {bank}
        </div>
        <Display display={this.state.display} />
      </div>
    )
  }
}

class Display extends React.Component{
  constructor(props){
    super(props);
  }
  render(){
    return(
      <div className="display">
        <div>
          <p>You Pressed:</p>
        </div>
        <div id="display">{this.props.display}</div>
      </div>
    )
  }
}

class App extends React.Component{
  constructor(props){
    super(props);
  }
  render(){
    return(
      <Machine />
    )
  }
}

ReactDOM.render(<App />, document.getElementById("app"));